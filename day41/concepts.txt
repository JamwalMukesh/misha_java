Java follow RAD model which means Rapid Application Development Model. 
Which focus upon usage of readymade code.

There are two kind of developer.
1. To build code to use by another developer 
2. Use the code developed by another developer.

For e.g. System.out.println() is not defined by us. It is build by Java Environment 
by some developer. 
What happen if we are not using this method the way it is defined. 

For understanding purpose,
I prepare a class which provide find out the discounted price. 

Today 3 August, 2024
we cover Why Exception Handling?

Exception Handling
Exception Handling in Java is one of the effective means to handle runtime errors 
so that the regular flow of the application can be preserved. 
Java Exception Handling is a mechanism to handle runtime errors 
such as ClassNotFoundException, IOException, SQLException, RemoteException, etc.

In Java all exception are child of java.lang.Exception class 
Here, java.lang is package name.
java.lang.RuntimeException class which is a parent of all runtime exception.

Java also provide a custom exception or user defined exception.

With the help of throw keyword we can generate exception in code.

If a piece code throws an exception and it is occurred in code, then, JVM provide 
a mechanism to handle it. Which is if there is an exception handler which handle it, 
then, JVM run that handler or if there is no exception handler then it call default 
exception handler.

Default exception handler stop the program execution and return complete function 
call stack to the console.

To handle an exception, developer need to provide an exception handler specific to  
generated exception.
For this, Java provide try catch.

try block hold the code where exception is raised.
catch block provide according to generated exception an alternate action.

